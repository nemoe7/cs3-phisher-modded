# Generated with assistance from Copilot Chat on 2025-05-20.
# /.github/workflows/syncupstream.yml

name: Sync Fork with Upstream

on:
  workflow_dispatch:
  schedule:
    # 08:00 Asia/Manila (UTC+8) â†’ 00:00 UTC
    - cron: '0 0 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork (master)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Set upstream and check if ahead
        id: set-upstream
        run: |
          # Add upstream remote if it doesn't exist
          if ! git rev-parse --quiet --verify upstream/master > /dev/null; then
            git remote add upstream https://github.com/phisher98/cloudstream-extensions-phisher.git || true
          fi

          # Fetch upstream changes
          git fetch upstream

          # Check if upstream is ahead
          if [ $(git fetch upstream; git rev-list --left-right --count upstream/master...origin/master | awk '{print $1}') -ne 0 ]; then
            echo "is_ahead=true" >> $GITHUB_OUTPUT
          else
            echo "Upstream is not ahead of origin."
            echo "is_ahead=false" >> $GITHUB_OUTPUT
          fi

      - name: Sync with upstream and handle deletions
        id: sync-upstream
        if: steps.set-upstream.outputs.is_ahead == 'true'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "github-actions[bot]@users.noreply.github.com"

          # Run merge script
          chmod +x ./.github/scripts/merge.sh
          ./.github/scripts/merge.sh

          # Commit merge changes (if any)
          git commit -m "Merge upstream changes" || true

      - name: Check for merge conflicts
        if: steps.sync-upstream.outcome == 'success'
        id: check-merge-conflicts
        run: |
          # Check for merge conflicts or changes
          if git ls-files -u | grep .; then
            echo "There are merge conflicts. Please resolve them manually."
            echo "merge_conflicts=true" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "merge_conflicts=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for changes
        if: steps.check-merge-conflicts.outcome == 'success'
        id: check-changes
        run: |
          if git diff --quiet origin/master...HEAD; then
            echo "No changes to merge. Nothing to PR."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changes and create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: |
          steps.check-changes.outcome == 'success'
          && steps.check-merge-conflicts.outputs.merge_conflicts == 'false'
          && steps.check-changes.outputs.changes == 'true'
        run: |
          # Push sync-upstream branch and create PR if needed
          git push -u origin sync-upstream --force
          gh repo set-default nemoe7/cs3-phisher-modded
          if ! gh pr list --head sync-upstream --base master --state open --json number | grep -q '[0-9]'; then
            gh pr create --head sync-upstream --base master --fill
          else
            echo "A pull request for 'sync-upstream' into 'master' already exists."
          fi
