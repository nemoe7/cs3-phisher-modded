/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.jiktan.models

import com.jiktan.models.AnimeImages
import com.jiktan.models.Broadcast
import com.jiktan.models.Daterange
import com.jiktan.models.MalUrl
import com.jiktan.models.Title
import com.jiktan.models.TrailerBase

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Anime Resource
 *
 * @param malId MyAnimeList ID
 * @param url MyAnimeList URL
 * @param images
 * @param trailer
 * @param approved Whether the entry is pending approval on MAL or not
 * @param titles All titles
 * @param title Title
 * @param titleEnglish English Title
 * @param titleJapanese Japanese Title
 * @param titleSynonyms Other Titles
 * @param type Anime Type
 * @param source Original Material/Source adapted from
 * @param episodes Episode count
 * @param status Airing status
 * @param airing Airing boolean
 * @param aired
 * @param duration Parsed raw duration
 * @param rating Anime audience rating
 * @param score Score
 * @param scoredBy Number of users
 * @param rank Ranking
 * @param popularity Popularity
 * @param members Number of users who have added this entry to their list
 * @param favorites Number of users who have favorited this entry
 * @param synopsis Synopsis
 * @param background Background
 * @param season Season
 * @param year Year
 * @param broadcast
 * @param producers
 * @param licensors
 * @param studios
 * @param genres
 * @param explicitGenres
 * @param themes
 * @param demographics
 */


data class Anime (

    /* MyAnimeList ID */
    @get:JsonProperty("mal_id")
    val malId: kotlin.Int? = null,

    /* MyAnimeList URL */
    @get:JsonProperty("url")
    val url: kotlin.String? = null,

    @get:JsonProperty("images")
    val images: AnimeImages? = null,

    @get:JsonProperty("trailer")
    val trailer: TrailerBase? = null,

    /* Whether the entry is pending approval on MAL or not */
    @get:JsonProperty("approved")
    val approved: kotlin.Boolean? = null,

    /* All titles */
    @get:JsonProperty("titles")
    val titles: kotlin.collections.List<Title>? = null,

    /* Title */
    @get:JsonProperty("title")
    @Deprecated(message = "This property is deprecated.")
    val title: kotlin.String? = null,

    /* English Title */
    @get:JsonProperty("title_english")
    @Deprecated(message = "This property is deprecated.")
    val titleEnglish: kotlin.String? = null,

    /* Japanese Title */
    @get:JsonProperty("title_japanese")
    @Deprecated(message = "This property is deprecated.")
    val titleJapanese: kotlin.String? = null,

    /* Other Titles */
    @get:JsonProperty("title_synonyms")
    @Deprecated(message = "This property is deprecated.")
    val titleSynonyms: kotlin.collections.List<kotlin.String>? = null,

    /* Anime Type */
    @get:JsonProperty("type")
    val type: Anime.Type? = null,

    /* Original Material/Source adapted from */
    @get:JsonProperty("source")
    val source: kotlin.String? = null,

    /* Episode count */
    @get:JsonProperty("episodes")
    val episodes: kotlin.Int? = null,

    /* Airing status */
    @get:JsonProperty("status")
    val status: Anime.Status? = null,

    /* Airing boolean */
    @get:JsonProperty("airing")
    val airing: kotlin.Boolean? = null,

    @get:JsonProperty("aired")
    val aired: Daterange? = null,

    /* Parsed raw duration */
    @get:JsonProperty("duration")
    val duration: kotlin.String? = null,

    /* Anime audience rating */
    @get:JsonProperty("rating")
    val rating: Anime.Rating? = null,

    /* Score */
    @get:JsonProperty("score")
    val score: kotlin.Float? = null,

    /* Number of users */
    @get:JsonProperty("scored_by")
    val scoredBy: kotlin.Int? = null,

    /* Ranking */
    @get:JsonProperty("rank")
    val rank: kotlin.Int? = null,

    /* Popularity */
    @get:JsonProperty("popularity")
    val popularity: kotlin.Int? = null,

    /* Number of users who have added this entry to their list */
    @get:JsonProperty("members")
    val members: kotlin.Int? = null,

    /* Number of users who have favorited this entry */
    @get:JsonProperty("favorites")
    val favorites: kotlin.Int? = null,

    /* Synopsis */
    @get:JsonProperty("synopsis")
    val synopsis: kotlin.String? = null,

    /* Background */
    @get:JsonProperty("background")
    val background: kotlin.String? = null,

    /* Season */
    @get:JsonProperty("season")
    val season: Anime.Season? = null,

    /* Year */
    @get:JsonProperty("year")
    val year: kotlin.Int? = null,

    @get:JsonProperty("broadcast")
    val broadcast: Broadcast? = null,

    @get:JsonProperty("producers")
    val producers: kotlin.collections.List<MalUrl>? = null,

    @get:JsonProperty("licensors")
    val licensors: kotlin.collections.List<MalUrl>? = null,

    @get:JsonProperty("studios")
    val studios: kotlin.collections.List<MalUrl>? = null,

    @get:JsonProperty("genres")
    val genres: kotlin.collections.List<MalUrl>? = null,

    @get:JsonProperty("explicit_genres")
    val explicitGenres: kotlin.collections.List<MalUrl>? = null,

    @get:JsonProperty("themes")
    val themes: kotlin.collections.List<MalUrl>? = null,

    @get:JsonProperty("demographics")
    val demographics: kotlin.collections.List<MalUrl>? = null

) {

    /**
     * Anime Type
     *
     * Values: TV,OVA,MOVIE,SPECIAL,ONA,MUSIC
     */
    enum class Type(val value: kotlin.String) {
        @JsonProperty(value = "TV") TV("TV"),
        @JsonProperty(value = "OVA") OVA("OVA"),
        @JsonProperty(value = "Movie") MOVIE("Movie"),
        @JsonProperty(value = "Special") SPECIAL("Special"),
        @JsonProperty(value = "ONA") ONA("ONA"),
        @JsonProperty(value = "Music") MUSIC("Music");
    }
    /**
     * Airing status
     *
     * Values: FINISHED_AIRING,CURRENTLY_AIRING,NOT_YET_AIRED
     */
    enum class Status(val value: kotlin.String) {
        @JsonProperty(value = "Finished Airing") FINISHED_AIRING("Finished Airing"),
        @JsonProperty(value = "Currently Airing") CURRENTLY_AIRING("Currently Airing"),
        @JsonProperty(value = "Not yet aired") NOT_YET_AIRED("Not yet aired");
    }
    /**
     * Anime audience rating
     *
     * Values: G_MINUS_ALL_AGES,PG_MINUS_CHILDREN,PG_MINUS13_MINUS_TEENS_13_OR_OLDER,R_MINUS_17_PLUS_LEFT_PARENTHESIS_VIOLENCE_AMPERSAND_PROFANITY_RIGHT_PARENTHESIS,R_PLUS_MINUS_MILD_NUDITY,RX_MINUS_HENTAI
     */
    enum class Rating(val value: kotlin.String) {
        @JsonProperty(value = "G - All Ages") G_MINUS_ALL_AGES("G - All Ages"),
        @JsonProperty(value = "PG - Children") PG_MINUS_CHILDREN("PG - Children"),
        @JsonProperty(value = "PG-13 - Teens 13 or older") PG_MINUS13_MINUS_TEENS_13_OR_OLDER("PG-13 - Teens 13 or older"),
        @JsonProperty(value = "R - 17+ (violence & profanity)") R_MINUS_17_PLUS_LEFT_PARENTHESIS_VIOLENCE_AMPERSAND_PROFANITY_RIGHT_PARENTHESIS("R - 17+ (violence & profanity)"),
        @JsonProperty(value = "R+ - Mild Nudity") R_PLUS_MINUS_MILD_NUDITY("R+ - Mild Nudity"),
        @JsonProperty(value = "Rx - Hentai") RX_MINUS_HENTAI("Rx - Hentai");
    }
    /**
     * Season
     *
     * Values: SUMMER,WINTER,SPRING,FALL
     */
    enum class Season(val value: kotlin.String) {
        @JsonProperty(value = "summer") SUMMER("summer"),
        @JsonProperty(value = "winter") WINTER("winter"),
        @JsonProperty(value = "spring") SPRING("spring"),
        @JsonProperty(value = "fall") FALL("fall");
    }

}
