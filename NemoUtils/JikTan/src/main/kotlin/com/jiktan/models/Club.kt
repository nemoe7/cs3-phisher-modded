/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.jiktan.models

import com.jiktan.models.CommonImages

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Club Resource
 *
 * @param malId MyAnimeList ID
 * @param name Club name
 * @param url Club URL
 * @param images
 * @param members Number of club members
 * @param category Club Category
 * @param created Date Created ISO8601
 * @param access Club access
 */


data class Club (

    /* MyAnimeList ID */
    @get:JsonProperty("mal_id")
    val malId: kotlin.Int? = null,

    /* Club name */
    @get:JsonProperty("name")
    val name: kotlin.String? = null,

    /* Club URL */
    @get:JsonProperty("url")
    val url: kotlin.String? = null,

    @get:JsonProperty("images")
    val images: CommonImages? = null,

    /* Number of club members */
    @get:JsonProperty("members")
    val members: kotlin.Int? = null,

    /* Club Category */
    @get:JsonProperty("category")
    val category: Club.Category? = null,

    /* Date Created ISO8601 */
    @get:JsonProperty("created")
    val created: kotlin.String? = null,

    /* Club access */
    @get:JsonProperty("access")
    val access: Club.Access? = null

) {

    /**
     * Club Category
     *
     * Values: ACTORS_AMPERSAND_ARTISTS,ANIME,CHARACTERS,CITIES_AMPERSAND_NEIGHBORHOODS,COMPANIES,CONVENTIONS,GAMES,JAPAN,MANGA,MUSIC,OTHERS,SCHOOLS
     */
    enum class Category(val value: kotlin.String) {
        @JsonProperty(value = "actors & artists") ACTORS_AMPERSAND_ARTISTS("actors & artists"),
        @JsonProperty(value = "anime") ANIME("anime"),
        @JsonProperty(value = "characters") CHARACTERS("characters"),
        @JsonProperty(value = "cities & neighborhoods") CITIES_AMPERSAND_NEIGHBORHOODS("cities & neighborhoods"),
        @JsonProperty(value = "companies") COMPANIES("companies"),
        @JsonProperty(value = "conventions") CONVENTIONS("conventions"),
        @JsonProperty(value = "games") GAMES("games"),
        @JsonProperty(value = "japan") JAPAN("japan"),
        @JsonProperty(value = "manga") MANGA("manga"),
        @JsonProperty(value = "music") MUSIC("music"),
        @JsonProperty(value = "others") OTHERS("others"),
        @JsonProperty(value = "schools") SCHOOLS("schools");
    }
    /**
     * Club access
     *
     * Values: PUBLIC,PRIVATE,SECRET
     */
    enum class Access(val value: kotlin.String) {
        @JsonProperty(value = "public") PUBLIC("public"),
        @JsonProperty(value = "private") PRIVATE("private"),
        @JsonProperty(value = "secret") SECRET("secret");
    }

}
